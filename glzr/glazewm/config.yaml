general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  startup_commands: ["shell-exec zebar"]
  # Whether to automatically focus windows underneath the cursor.

  focus_follows_cursor: false
  # Whether to switch back and forth between the previously focused

  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false
  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true
    # Trigger for cursor jump:

    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    # trigger: "monitor_focus"
    trigger: "window_focus"
gaps:
  # Gap between adjacent windows.
  inner_gap: "0px"
  # Gap between windows and the screen edge.

  outer_gap:
    top: "40px"
    right: "1px"
    bottom: "1px"
    left: "1px"
window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#42cef5"
  # Visual effects to apply to non-focused windows.

  other_windows:
    border:
      enabled: true
      color: "#a1a1a1"
window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"
  # Sets the default options for when a new window is created. This also

  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true
      # Whether to show floating windows as always on top.

      shown_on_top: true
    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false
      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: "1"
    bind_to_monitor: 0
  - name: "2"
    bind_to_monitor: 0
  - name: "3"
    bind_to_monitor: 0
  - name: "4"
    bind_to_monitor: 0
  - name: "5"
    bind_to_monitor: 0
  - name: "6"
    bind_to_monitor: 0
  - name: "7"
    bind_to_monitor: 1
  - name: "8"
    bind_to_monitor: 1
  - name: "9"
    bind_to_monitor: 1

window_rules:
  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: {equals: "zebar"}
      - window_title: {regex: "[Pp]icture.in.[Pp]icture"}
        # Ignores picture-in-picture windows for browsers.

        window_class: {regex: "Chrome_WidgetWin_1|MozillaDialogClass"}
      - window_process: {equals: "PowerToys.PowerAccent"}
        # Ignore rules for various 3rd-party apps.
      - window_process: {equals: "Lively"}
        window_class: {regex: "HwndWrapper*"}


binding_modes:

keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["shift+alt+left"]
  - commands: ["focus --direction right"]
    bindings: ["shift+alt+right"]
  - commands: ["focus --direction up"]
    bindings: ["shift+alt+up"]
  - commands: ["focus --direction down"]
    bindings: ["shift+alt+down"]
    

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["ctrl+shift+alt+left"]
  - commands: ["move --direction right"]
    bindings: ["ctrl+shift+alt+right"]
  - commands: ["move --direction up"]
    bindings: ["ctrl+shift+alt+up"]
  - commands: ["move --direction down"]
    bindings: ["ctrl+shift+alt+down"]

  - commands: ["toggle-minimized"]
    bindings: ["ctrl+shift+alt+m"]

  # Change tiling direction to horizontal.
  - commands: ["toggle-tiling-direction"]
    bindings: ["ctrl+shift+alt+v"]

  # change window size
  - commands: ["resize --width -2%"]
    bindings: ["ctrl+alt+left"]
  - commands: ["resize --width +2%"]
    bindings: ["ctrl+alt+right"]
  - commands: ["resize --height +2%"]
    bindings: ["ctrl+alt+up"]
  - commands: ["resize --height -2%"]
    bindings: ["ctrl+alt+down"]    


  # - commands: ["wm-enable-binding-mode --name pause"]
    # Disables all keybindings until alt+shift+p is pressed again.
  #   bindings: ["alt+shift+p"]

  # - commands: ["toggle-tiling-direction"]
  #   # Change tiling direction. This determines where new tiling windows will
  #   # be inserted.
  #   bindings: ["alt+v"]
  #   # bindings: ["alt+c"]

  # - commands: ["toggle-floating --centered"]
  #   # Change focus from tiling windows -> floating -> fullscreen.
  #   # Change the focused window to be floating.
  #   # - commands: ["wm-cycle-focus"]
  #   bindings: ["alt+shift+space"]

  # - commands: ["toggle-tiling"]
  #   # Change the focused window to be tiling.
  #   bindings: ["alt+t"]

  # - commands: ["toggle-fullscreen"]
  #   # Change the focused window to be fullscreen.
  #   bindings: ["alt+f"]

  # - commands: ["toggle-minimized"]
  #   # Minimize focused window.
  #   bindings: ["alt+m"]

  # - commands: ["close"]
  #   # Close focused window.
  #   bindings: ["alt+shift+q"]

  # - commands: ["wm-exit"]
  #   # Kill GlazeWM process safely.
  #   bindings: ["alt+shift+e"]

  # - commands: ["wm-redraw"]
  #   # Redraw all windows.
  #   bindings: ["alt+shift+w"]

  # - commands: ["shell-exec wezterm-gui"]
  #   # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  #   # Terminal and Git Bash respectively.
  #   # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  #   bindings: ["alt+enter"]


  # - commands: ["focus --next-workspace"]
  #   # Focus the next/previous workspace defined in `workspaces` config.  #   bindings: ["alt+s"]

  # - commands: ["focus --prev-workspace"]left  #   bindings: ["alt+up"]  # - commands: ["focus --recent-workspace"]
  #   # Focus the workspace that last had focus.  #   bindings: ["alt++righup]

    # Change focus to a workspace defined in `workspaces` confidown.
  - commands: ["focus --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+shift+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["alt+shift+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["alt+shift+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+shift+9"]

  - commands: ["wm-reload-config"]
    # Re-evaluate configuration file.
    bindings: ["alt+shift+r"]
  
    # Move the focused window's parent workspace to a monitor in a given

  #   # direction.
  #   bindings: ["alt+shift+a"]
  # - commands: ["move-workspace --direction right"]
  #   bindings: ["alt+shift+f"]
  # - commands: ["move-workspace --direction up"]
  #   bindings: ["alt+shift+d"]
  # - commands: ["move-workspace --direction down"]
  #   bindings: ["alt+shift+s"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["ctrl+alt+shift+r"]

  #   # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1", "focus --workspace 1"]
    bindings: ["ctrl+alt+shift+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["ctrl+alt+shift+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["ctrl+alt+shift+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["ctrl+alt+shift+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["ctrl+alt+shift+5"]
  - commands: ["move --workspace 6", "focus --workspace 6"]
    bindings: ["ctrl+alt+shift+6"]
  - commands: ["move --workspace 7", "focus --workspace 7"]
    bindings: ["ctrl+alt+shift+7"]
  - commands: ["move --workspace 8", "focus --workspace 8"]
    bindings: ["ctrl+alt+shift+8"]
  - commands: ["move --workspace 9", "focus --workspace 9"]
    bindings: ["ctrl+alt+shift+9"] G